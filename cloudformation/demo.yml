AWSTemplateFormatVersion: "2010-09-09"
Description: Demo Servers for WSLug

Parameters:


  InstanceType:
    Type: String
    Description: "EC2 instance type"
    Default: "t2.micro"
    AllowedValues:
      - "t2.micro"
      - "t2.small"
      - "t2.medium"
      - "t2.large"
      - "m3.medium"
      - "m3.large"
      - "m3.xlarge"
      - "m3.2xlarge"
      - "m4.large"
      - "m4.xlarge"
      - "m4.2xlarge"
      - "m4.4xlarge"
      - "m4.10xlarge"
      - "c4.large"
      - "c4.xlarge"
      - "c4.2xlarge"
      - "c4.4xlarge"
      - "c4.8xlarge"
      - "c3.large"
      - "c3.xlarge"
      - "c3.2xlarge"
      - "c3.4xlarge"
      - "c3.8xlarge"
      - "r3.large"
      - "r3.xlarge"
      - "r3.2xlarge"
      - "r3.4xlarge"
      - "r3.8xlarge"
      - "c3.4xlarge"
      - "c3.8xlarge"
      - "r3.large"
      - "r3.xlarge"
      - "r3.2xlarge"
      - "r3.4xlarge"
      - "i2.xlarge"
      - "i2.2xlarge"
      - "i2.4xlarge"
      - "i2.8xlarge"
    ConstraintDescription: "Please choose a valid instance type."

Mappings:
  # Ubuntu 16.04 LTS HVM ebs-ssd
  # AMI's culled from https://cloud-images.ubuntu.com/locator/ec2/
  AWSRegionToAMI:
    "ap-northeast-1":
      AMIID: "ami-eb49358c"
    "ap-southeast-1":
      AMIID: "ami-b1943fd2"
    "eu-central-1":
      AMIID: "ami-5aee2235"
    "eu-west-1":
      AMIID: "ami-d8f4deab"
    "sa-east-1":
      AMIID: "ami-7379e31f"
    "us-east-1":
      AMIID: "ami-6edd3078"
    "us-west-1":
      AMIID: "ami-539ac933"
    "cn-north-1":
      AMIID: "ami-b2a97edf"
    "us-gov-west-1":
      AMIID: "ami-19d56d78"
    "ap-southeast-2":
      AMIID: "ami-fe71759d"
    "us-west-2":
      AMIID: "ami-7c803d1c"


Resources:

  DemoServersRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "ec2.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        - PolicyName: "DemoDescribeAccess" 
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action: "ec2:Describe*"
                Resource: "*"

  DemoServerProfile: # Create the profile
      Type: "AWS::IAM::InstanceProfile"
      Properties:
        Path: "/"
        Roles:
          -
            Ref: "DemoServersRole"

  DemoSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Demo Server Instance SecurityGroup"
      Tags:
      - Key: "StackName"
        Value: !Ref AWS::StackName

      SecurityGroupIngress:
        -
          # Allow http port from ALL
          IpProtocol: "tcp"
          FromPort: "80"
          ToPort: "80"
          CidrIp: "0.0.0.0/0"
        -
          # Allow https port from ALL
          IpProtocol: "tcp"
          FromPort: "443"
          ToPort: "443"
          CidrIp: "0.0.0.0/0"
        -
          # Allow ssh port from 70.177.4.2/32(fastlink)
          IpProtocol: "tcp"
          FromPort: "22"
          ToPort: "22"
          CidrIp: "0.0.0.0/0"


  ApacheServer:
     Type: "AWS::EC2::Instance"
     Properties:
        IamInstanceProfile: !Ref DemoServerProfile
        ImageId: !FindInMap [ "AWSRegionToAMI", !Ref "AWS::Region", "AMIID" ]
        InstanceType: !Ref InstanceType
        KeyName: wslug-demo
        DisableApiTermination: True
        SecurityGroupIds:
          - !Ref DemoSecurityGroup
        Tags:
          - Key: "Name"
            Value: "ApacheServer"

  ApacheServerEIP:
    Type: "AWS::EC2::EIP"
    Properties:
      InstanceId: !Ref ApacheServer

  NgnixServer:
     Type: "AWS::EC2::Instance"
     Properties:
        IamInstanceProfile: !Ref DemoServerProfile
        ImageId: !FindInMap [ "AWSRegionToAMI", !Ref "AWS::Region", "AMIID" ]
        InstanceType: !Ref InstanceType
        KeyName: wslug-demo
        DisableApiTermination: True
        SecurityGroupIds:
          - !Ref DemoSecurityGroup
        Tags:
          - Key: "Name"
            Value: "NgnixServer"

  NgnixServerEIP:
    Type: "AWS::EC2::EIP"
    Properties:
      InstanceId: !Ref NgnixServer
